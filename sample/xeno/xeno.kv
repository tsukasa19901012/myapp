# -*- coding: utf-8 -*-

<XenoRootWidget>:
    tittle: 'XENO'
    canvas.before:
        Color:
            rgb: [1, 1, 1]
        Rectangle:
            pos: self.pos
            size: self.size

# タイトル画面
<TitleWidget@FloatLayout>:
    Label:
        text: 'XENO'
        color: [0, 0, 0, 1] # 黒文字
        font_size: 72
        pos_hint: {'center_x':0.5, 'center_y':0.7}
    Button:
        text: 'Start'
        font_size: 36
        size: [160, 100]
        size_hint: [None, None]
        pos_hint: {'center_x':0.5, 'center_y':0.3}
        background_color: [0, 0, 0, 1] # 黒ボタン
        on_press: app.root.gotoSelectTurn()

# 先攻後攻選択ボタン
<BtnTurn@Button>:
    background_normal: ''
    font_size: 36
    size_hint: [None, None]
    size: [175, 100]
    canvas:
        Color:
            rgb: [0, 0, 0]
        Line:
            rectangle: self.x, self.y, self.width, self.height
            width: 3

# 先攻後攻選択画面
<SelectTurn>:
    Label:
        text: '先攻か後攻を選択してください。'
        color: [0, 0, 0, 1]
        font_size: 48
        pos_hint: {'center_x':0.5, 'center_y':0.7}
    BtnTurn:    # 先攻
        text: '先攻'
        color: [1, 1, 1, 1]
        background_color: [0, 0, 0, 1]
        pos_hint: {'center_x':0.3, 'center_y':0.35}
        on_press: root.setFirstStrike()
    BtnTurn:    # 後攻
        text: '後攻'
        color: [0, 0, 0, 1]
        background_color: [1, 1, 1, 1]
        pos_hint: {'center_x':0.7, 'center_y':0.35}
        on_press: root.setSecondStrike()

# メイン画面
<XenoMainWidget>:
    id: xenoMainWidget
    turn: 1 # 1:プレイヤーターン、2:CPUターン
    deck: [1,2,3,4]
    reincarnationCard: 10
    playerHandList: []
    cpuHandList: []
    playerDiscardList: []
    cpuDiscardList: []
    playerFourFlg: 0
    cpuFourFlg: 0
    playerSevenflg: 0
    cpuSevenFlg: 0
    BoxLayout:
        id: xenoPlayWidget
        padding: 50
        orientation: 'vertical' # 縦1列
        # CPUの手札
        HandDiscardBox:
            id: cpuHandBox
            size_hint_y: 0.2
            pos_hint: {'center_x': 0.5}
        # CPUの捨て札
        ScrollView:
            id: cpuDiscardScroll
            do_scroll_y: False
            size_hint_y: 0.2
            HandDiscardBox:
                id: cpuDiscardBox
        # デッキ
        FloatLayout:
            id: id: deckFloat
            size_hint_y: 0.2
            # 転生札画像
            Image:
                id: reincarnationImage
                source: 'reincarnation.png' if xenoMainWidget.reincarnationCard != 0 else ''
                pos_hint: {'center_x': 0.5, 'center_y': 0.5 }
            # デッキ画像
            Image:
                id: deckImage
                source: 'deck.png'
                pos_hint: {'center_x': 0.5, 'center_y': 0.5 }
            # デッキ枚数ラベル
            Label:
                id: deckLabel
                text: str(len(xenoMainWidget.deck)) + '枚'
                color: [0, 0, 0, 1] # 黒文字
                font_size: 36
                pos_hint: {'center_x': 0.5, 'center_y': 0.5 }
        # プレイヤーの捨て札
        ScrollView:
            id: cpuDiscardScroll
            size_hint_y: 0.2
            HandDiscardBox:
                id: playerDiscardBox
        # プレイヤーの手札
        HandDiscardBox:
            id: playerHandBox
            size_hint_y: 0.2
            pos_hint: {'center_x': 0.5}

# カード画像
<CardImage>:
    size_hint_x: None
    width: 200
    num: 0
    card:
    playCardButtonDispFlg: 0 # 1:True 0:False
    source: 'deck.png'

# 手札・捨て札の基底BoxLayoutクラス
<HandDiscardBox@BoxLayout>:
    orientation: 'horizontal' # 横1列
    size_hint_x: None
    width: self.minimum_width

# カードクリック時の吹き出し
<CardBubbleModal@ModalView>:
    id: cardBubbleModal
    size_hint: (None, None)
    size: (250, 160)
    background_color: [0, 0, 0, 0]
    Bubble:
        id: cardBubble
        arrow_pos: 'left_mid'
        size_hint: (None, None)
        size: (250, 160)
        orientation: 'vertical' # 縦1列
        BubbleButton:
            id: caedInfoButton
            text: 'カード詳細'
        BubbleButton:
            id: playCardButton
            text: 'カードを出す'

# カード詳細画面
<CardInFoModal>:
    id: cardInFoModal
    size_hint: None, None
    size: 720, 1080
    on_touch_down:
        self.dismiss(force=True)
    BoxLayout:
        orientation: 'vertical' # 縦1列
        padding: 50
        Label:
            size_hint_y: 0.1
            text: 'カード詳細'
        Label:
            size_hint_y: 0.1
            id: cardTittle
            text: 
        Image:
            size_hint_y: 0.5
            id: cardImage
            source: ''
        Label:
            size_hint_y: 0.1
            text: 'カード効果'
        Label:
            id: cardEfficacy
            size_hint_y: 0.2
            text_size: self.size
            halign: 'left'
            valign: 'top'
            text:

# 6の対面結果画面
<SixFirstResultModal@ModalView>:
    id: sixFirstResultModal
    size_hint: None, None
    size: 720, 1080
    turnLabelText: ''
    resultPlayerLabelText: ''
    resultCpuLabelText: ''
    on_touch_down:
        self.dismiss(force=True)
    BoxLayout:
        orientation: 'vertical' # 縦1列
        padding: 50
        Label:
            id: turnLabel
            text: sixFirstResultModal.turnLabelText
        Label:
            id: resultCpuLabel
            text: sixFirstResultModal.resultCpuLabelText
        Label:
            id: resultPlayerLabel
            text: sixFirstResultModal.resultPlayerLabelText

# 6の対決結果画面
<SixSecoundResultModal@ModalView>:
    id: sixSecoundResultModal
    size_hint: None, None
    size: 720, 1080
    turnLabelText: ''
    resultLabelText: ''
    on_touch_down:
        self.dismiss(force=True)
    BoxLayout:
        orientation: 'vertical' # 縦1列
        padding: 50
        Label:
            id: turnLabel
            text: sixSecoundResultModal.turnLabelText
        Label:
            id: resultLabel
            text: sixSecoundResultModal.resultLabelText

# カード効果画面基底クラス
<BasicEfficacyModal@ModalView>:
    id: basicEfficacyModal
    size_hint: None, None
    size: 720, 1080
    resultLabelText: ''
    on_touch_down:
        self.dismiss(force=True)
    BoxLayout:
        id: box
        orientation: 'vertical' # 縦1列
        padding: 50
        Label:
            size_hint_y: 0.2
            text: basicEfficacyModal.resultLabelText

# カード効果選択画面基底クラス
<BasicEfficacySelectModal@ModalView>:
    id: basicEfficacySelectModal
    size_hint: None, None
    size: 720, 1080
    auto_dismiss: False # ビューの外側をクリックしたときにビューを自動的に閉じないようにする。
    resultLabelText: ''
    BoxLayout:
        id: box
        orientation: 'vertical' # 縦1列
        padding: 50
        Label:
            size_hint_y: 0.2
            text: basicEfficacySelectModal.resultLabelText